name: Deploy (Compose on VPS)

on:
  push:
    branches: [ "develop" ]
  workflow_dispatch: {}

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: pfapp/img
      IMAGE_TAG: ${{ github.sha }}
      TAR_NAME: image.tar.gz
      REMOTE_DIR: /srv/portfoliolab/deploy

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build image
        run: |
          docker build -t ${IMAGE_NAME}:${IMAGE_TAG} .
          docker save ${IMAGE_NAME}:${IMAGE_TAG} | gzip > ${TAR_NAME}
          ls -lh ${TAR_NAME}
          

      - name: Verify artifacts exist
        run: |
          set -euo pipefail
          echo "PWD=$(pwd)"
          ls -alh
          test -f image.tar.gz || { echo "❌ Missing image.tar.gz"; exit 1; }
          # si usas el 'baked' compose:
          if test -f docker-compose.deploy.yml; then
            echo "✅ docker-compose.deploy.yml present"
          else
            echo "ℹ️ No baked compose, will fall back to docker-compose.yml"
            test -f docker-compose.yml || { echo "❌ Missing docker-compose.yml"; exit 1; }
            cp docker-compose.yml docker-compose.deploy.yml
          fi
          test -f Caddyfile || echo "⚠️ Caddyfile not found (ok si no lo usas)"
          ls -lh image.tar.gz docker-compose.deploy.yml || true

      - name: Render compose with baked tag
        run: |
          export IMAGE_TAG="${IMAGE_TAG}"
          envsubst '${IMAGE_TAG}' < docker-compose.yml > docker-compose.deploy.yml
          head -n 30 docker-compose.deploy.yml
          mv docker-compose.deploy.yml docker-compose.yml


      - name: Upload tar + rendered compose + Caddyfile
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT }}
          source: "image.tar.gz,docker-compose.yml,Caddyfile"
          target: ${{ env.REMOTE_DIR }}
          overwrite: true
          rm: false  # Evita que elimine archivos existentes


      - name: Load image & compose up & migrate
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT }}
          script_stop: true
          script: |
            set -euo pipefail
            REMOTE_DIR="${{ env.REMOTE_DIR }}"  # Aquí defines la variable en el VPS
            cd "$REMOTE_DIR"  # Ahora puedes usarla
            docker load -i image.tar.gz && rm -f image.tar.gz
            docker compose up -d --remove-orphans
            docker compose exec -T web python manage.py migrate --noinput || true
            docker compose exec -T web python manage.py collectstatic --noinput || true
            docker compose ps
