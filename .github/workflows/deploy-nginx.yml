# .github/workflows/deploy-nginx.yml
name: Deploy Nginx to VPS (test)

on:
  push:
    branches: [ "test-ssh" ]       # o la rama que quieras
  workflow_dispatch:            # permite lanzarlo a mano

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Nos conectamos por SSH al VPS y lanzamos nginx:alpine
      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.VPS_HOST }}      # ej. 1.2.3.4
          username: ${{ secrets.VPS_USER }}  # ej. ubuntu
          key: ${{ secrets.VPS_SSH_KEY }}    # clave privada del usuario del VPS
          port: ${{ secrets.VPS_PORT || 22 }}
          script_stop: true
          script: |
            set -e

            APP_DIR="/srv/nginx-test"
            PUBLIC_PORT="${PUBLIC_PORT:-8080}"    # puerto público del VPS
            mkdir -p "${APP_DIR}/site"

            # Página simple para verificar que el deploy funciona
            cat << 'EOF' | tee "${APP_DIR}/site/index.html" > /dev/null
            <!doctype html>
            <html lang="es">
            <head><meta charset="utf-8"><title>OK - Nginx CI</title></head>
            <body style="font-family:system-ui;margin:40px;">
              <h1>✅ Deploy Nginx funcionando</h1>
              <p>Servido por <strong>nginx:alpine</strong> lanzado desde <strong>GitHub Actions</strong>.</p>
              <p>Hora del servidor: <span id="ts"></span></p>
              <script>document.getElementById('ts').textContent = new Date().toString();</script>
            </body>
            </html>
            EOF

            # Tirar si existe y levantar nuevo Nginx
            docker pull nginx:alpine
            docker rm -f nginx-test || true
            docker run -d --name nginx-test \
              --restart unless-stopped \
              -p ${PUBLIC_PORT}:80 \
              -v "${APP_DIR}/site:/usr/share/nginx/html:ro" \
              nginx:alpine

            echo "Nginx desplegado en puerto ${PUBLIC_PORT}"
