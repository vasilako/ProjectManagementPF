# .github/workflows/deploy-nginx.yml
name: Deploy Nginx to VPS (test)

on:
  push:
    branches: [ "test-ssh" ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Deploy Nginx (robusto, sin sudo)
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT || 22 }}
          script_stop: true
          script: |
            set -e

            echo "== Diagnóstico breve =="
            whoami || true
            id || true
            echo "HOME=$HOME"
            pwd

            # Elegir carpeta base escribible: HOME -> PWD -> /var/tmp -> /tmp
            pick_writable_dir() {
              for d in "$HOME" "$(pwd)" /var/tmp /tmp; do
                if [ -n "$d" ] && mkdir -p "$d/.probe" >/dev/null 2>&1; then
                  rmdir "$d/.probe" 2>/dev/null || true
                  echo "$d"
                  return 0
                fi
              done
              echo "/tmp"
            }

            BASE_DIR="$(pick_writable_dir)"
            APP_DIR="${BASE_DIR%/}/nginx-test"
            SITE_DIR="${APP_DIR}/site"

            echo "Usando APP_DIR=${APP_DIR}"
            mkdir -p "${SITE_DIR}"

            cat > "${SITE_DIR}/index.html" << 'EOF'
            <!doctype html>
            <html lang="es"><head><meta charset="utf-8"><title>OK - Nginx CI</title></head>
            <body style="font-family:system-ui;margin:40px;">
              <h1>✅ Deploy Nginx funcionando</h1>
              <p>Servido por <strong>nginx:alpine</strong> lanzado desde <strong>GitHub Actions</strong>.</p>
              <p>Hora del servidor: <span id="ts"></span></p>
              <script>document.getElementById('ts').textContent = new Date().toString();</script>
            </body></html>
            EOF

            # Asegúrate de que puedes usar docker SIN sudo (grupo docker)
            docker info >/dev/null

            docker pull nginx:alpine
            docker rm -f nginx-test || true
            docker run -d --name nginx-test \
              --restart unless-stopped \
              -p 8080:80 \
              -v "${SITE_DIR}:/usr/share/nginx/html:ro" \
              nginx:alpine

      - name: Health check
        run: |
          curl -fsS "http://${{ secrets.VPS_HOST }}:8080" | head -n 2
